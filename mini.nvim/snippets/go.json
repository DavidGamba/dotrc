{
  "maincmd": {
    "body": [
      "package main",
      "",
      "import (",
      "\t\"context\"",
      "\t\"errors\"",
      "\t\"fmt\"",
      "\t\"io\"",
      "\t\"log\"",
      "\t\"os\"",
      "",
      "\t\"github.com/DavidGamba/dgtools/run\"",
      "\t\"github.com/DavidGamba/go-getoptions\"",
      ")",
      "",
      "var Logger = log.New(os.Stderr, \"\", log.LstdFlags)",
      "",
      "func main() {",
      "\tos.Exit(program(os.Args))",
      "}",
      "",
      "func program(args []string) int {",
      "\topt := getoptions.New()",
      "\topt.Bool(\"quiet\", false, opt.GetEnv(\"QUIET\"))",
      "\topt.SetUnknownMode(getoptions.Pass)",
      "\topt.NewCommand(\"cmd\", \"description\").SetCommandFn(Run)",
      "\topt.HelpCommand(\"help\", opt.Alias(\"?\"))",
      "\tremaining, err := opt.Parse(args[1:])",
      "\tif err != nil {",
      "\t\tfmt.Fprintf(os.Stderr, \"ERROR: %s\\n\", err)",
      "\t\treturn 1",
      "\t}",
      "\tif opt.Called(\"quiet\") {",
      "\t\tLogger.SetOutput(io.Discard)",
      "\t}",
      "\tLogger.Println(remaining)",
      "",
      "\tctx, cancel, done := getoptions.InterruptContext()",
      "\tdefer func() { cancel(); <-done }()",
      "",
      "\terr = opt.Dispatch(ctx, remaining)",
      "\tif err != nil {",
      "\t\tif errors.Is(err, getoptions.ErrorHelpCalled) {",
      "\t\t\treturn 1",
      "\t\t}",
      "\t\tfmt.Fprintf(os.Stderr, \"ERROR: %s\\n\", err)",
      "\t\treturn 1",
      "\t}",
      "\treturn 0",
      "}",
      "",
      "func Run(ctx context.Context, opt *getoptions.GetOpt, args []string) error {",
      "\tLogger.Printf(\"Running\")",
      "",
      "\tcmd := []string{\"echo\", \"hello\", \"world\"}",
      "\terr := run.CMD(cmd...).Log().Run()",
      "\tif err != nil {",
      "\t\treturn fmt.Errorf(\"failed: %w\", err)",
      "\t}",
      "\treturn nil",
      "}"
    ],
    "prefix": "maincmd"
  },
  "main": {
    "body": [
      "package main",
      "",
      "import (",
      "\t\"context\"",
      "\t\"errors\"",
      "\t\"fmt\"",
      "\t\"io\"",
      "\t\"log\"",
      "\t\"os\"",
      "",
      "\t\"github.com/DavidGamba/dgtools/run\"",
      "\t\"github.com/DavidGamba/go-getoptions\"",
      ")",
      "",
      "var Logger = log.New(os.Stderr, \"\", log.LstdFlags)",
      "",
      "func main() {",
      "\tos.Exit(program(os.Args))",
      "}",
      "",
      "func program(args []string) int {",
      "\topt := getoptions.New()",
      "\topt.SetUnknownMode(getoptions.Pass)",
      "\topt.Bool(\"quiet\", false, opt.GetEnv(\"QUIET\"))",
      "\topt.SetCommandFn(Run)",
      "\topt.HelpCommand(\"help\", opt.Alias(\"?\"))",
      "\tremaining, err := opt.Parse(args[1:])",
      "\tif err != nil {",
      "\t\tfmt.Fprintf(os.Stderr, \"ERROR: %s\\n\", err)",
      "\t\treturn 1",
      "\t}",
      "\tif opt.Called(\"quiet\") {",
      "\t\tLogger.SetOutput(io.Discard)",
      "\t}",
      "\tLogger.Println(remaining)",
      "",
      "\tctx, cancel, done := getoptions.InterruptContext()",
      "\tdefer func() { cancel(); <-done }()",
      "",
      "\terr = opt.Dispatch(ctx, remaining)",
      "\tif err != nil {",
      "\t\tif errors.Is(err, getoptions.ErrorHelpCalled) {",
      "\t\t\treturn 1",
      "\t\t}",
      "\t\tfmt.Fprintf(os.Stderr, \"ERROR: %s\\n\", err)",
      "\t\tif errors.Is(err, getoptions.ErrorParsing) {",
      "\t\t\tfmt.Fprintf(os.Stderr, \"\\n\"+opt.Help())",
      "\t\t}",
      "\t\treturn 1",
      "\t}",
      "\treturn 0",
      "}",
      "",
      "func Run(ctx context.Context, opt *getoptions.GetOpt, args []string) error {",
      "\tLogger.Printf(\"Running\")",
      "",
      "\tcmd := []string{\"echo\", \"hello\", \"world\"}",
      "\terr := run.CMD(cmd...).Log().Run()",
      "\tif err != nil {",
      "\t\treturn fmt.Errorf(\"failed: %w\", err)",
      "\t}",
      "\treturn nil",
      "}"
    ],
    "description": "single level script",
    "prefix": [
      "main"
    ]
  }
}

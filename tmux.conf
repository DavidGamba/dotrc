################################################################################
# Build
################################################################################
# sudo apt install -y autoconf automake build-essential git libevent-dev libncurses5-dev pkg-config
# git clone https://github.com/tmux/tmux.git
# sh autogen.sh
# ./configure --prefix=$HOME/opt/tmux-local
# make -j`nproc`
# make install

################################################################################
# Neovim settings
################################################################################
set -sg escape-time 10
# set -g default-terminal "screen-256color"
# set -g default-terminal "xterm-256color"
# set-option -g default-terminal "screen-256color"
# set -as terminal-overrides ",*-256color:RGB"
# set -as terminal-overrides ',*:Smulx=\E[3::%p1%dm'
set -g default-terminal "tmux-256color"
# set -g default-terminal "screen-256color" # This disables italics
# # true color
#set-option -g -a terminal-overrides ',xterm-256color:Tc,*:Ss=\E[%p1%d q:Se=\E[2 q'
set-option -g focus-events on

set-option -g history-limit 1000000000

# remap prefix from 'C-b' to 'C-Space'
unbind C-b
unbind C-w
bind-key C-Space send-prefix

# Toggle mouse on with prefix m
bind-key -T prefix m set -g mouse\; display 'Mouse: #{?mouse,ON,OFF}'

# Open new window in same directory
# split panes using | and -
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %
bind c new-window -c "#{pane_current_path}"
#set-window-option -g window-status-current-bg yellow
#set-option -g mouse-select-pane on


# reload config file (change file location to your the tmux.conf you want to use)
unbind r
bind r source-file ~/.tmux.conf

# don't rename windows automatically
set-option -g allow-rename off

# rename with A
bind A command-prompt 'rename-window %%'

# last window pressing prefix twice
set-option -g prefix C-Space
bind-key C-Space last-window

bind-key C-n next-window
bind-key C-p previous-window
bind-key a choose-window

## Join windows: <prefix> s, <prefix> j
bind-key J command-prompt -p "join pane from:"  "join-pane -h -s '%%.0'"
bind-key S command-prompt -p "send pane to:"  "join-pane -h -t '%%.0'"
bind-key B break-pane
# quick pane cycling
set-option -g prefix2 C-o
bind-key C-o send-prefix -2
bind-key C-o select-pane -t :.+
# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
# Cheatsheet:
# * o change pane, ^o rotate pane
# * <space> change layout


# Show pane's name
set -g pane-border-style fg=black
set -g pane-active-border-style fg=brightblue

# Move window with C-S-Left and Right
bind-key -n C-S-Left swap-window -t -1 \; previous-window
bind-key -n C-S-Right swap-window -t +1 \; next-window

# kill window with k
bind K confirm kill-window
#bind K confirm kill-server

bind e set -g status-bg red
bind E set -g status-bg green

# Vi copypaste mode
# set-window-option -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'V' send -X select-line
bind-key -T copy-mode-vi 'r' send -X rectangle-toggle
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "xclip -in -selection clipboard"

# Styling
set-window-option -g status-position top
run-shell "tmux source-file ~/dotrc/tmux.dracula.theme"
# run-shell "tmux source-file ~/dotrc/tmux.default.theme"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
